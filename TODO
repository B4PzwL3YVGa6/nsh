$nsh: TODO,v 1.28 2008/01/13 02:27:38 chris Exp $

nsh is a work in progress, diffs are welcome

Cleanup:

* Formatting for the manual.  Something that looks slick in PDF and print.
* More security auditing for string handling, off-by-one errors, data
  passed to kernel, data passed elsewhere...
* Sanity check _before_ args hit int*() routines, based on some framework
  of possible values for each function (something that works along with
  context sensitive help framework)
* Consistency for return values between functions
* Support new wireless information interfaces where necessary, also dump wi.c
  once if_wi moves to new interfaces
* Use getaddrinfo and netname/routename(show.c) instead of home-grown
  parse functions to make IPv6 support easier
* Use sockaddr everywhere instead of home-grown ip_t

To be implemented:

* handle snmpd access controls or full snmpd.conf editor mode
* handle bridge rtsp commands
* handle newer 802.11 gunk like rssi display, chan, flags
* handle kernel pppoe
* Interface with bgpd.conf, ospfd.conf, ripd.conf, relayd.conf, ipsec.conf,
  daemons (start/stop) associated ctl programs (possibly like the pfctl
  interface, or better)
* RSA certificate generation/management method (at least for isakmpd)
* privsep (imsg based?)
* Persistent comments/remarks in the config file (to document routes, etc..)
* IPv6 (shouldn't be too hard, considering that most of the functions
  we stole from other source already support it, but i won't look at this
  until I use IPv6 myself, or someone else submits IPv6 patches)

Would be nice:

* Perhaps some way for the shell to upgrade itself, or the entire system/
  flash image when given a network source for new binaries?
* Build a simple web interface that works through the rc file handler (web if
  that calls nsh -i to execute commands)
* Add more diagnostic messages for verbose output where useful
* Support for paging through displays of text X lines at a time
* Something comparable to "| inc" from cisco-land
* Tab command/argument completion
* Context-sensitive help
* Convenient/automatic mechanisms to centralize configurations for
  tracking/revision control

Known Bugs (or, things that I don't want to bother with right now, but
better not forget later...):

* The kernel does not keep count of information displayed in 'show rtstat'
  properly (what else??)
* ALTQTBRSET was removed from the kernel with the migration to pf.  But,
  there is no easy to use equivalent.  Fix this.
* The kernel/wireless drivers do not use txpower data in any way.  Also
  TXPOWER_AUTO does absolutely nothing and is not even tracked in the kernel.
* ...
